<Controls:MetroWindow x:Class="GoogleTaskDesktop.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                      xmlns:simpleChildWindow="clr-namespace:MahApps.Metro.SimpleChildWindow;assembly=MahApps.Metro.SimpleChildWindow"
                      xmlns:local="clr-namespace:GoogleTaskDesktop"
                      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      mc:Ignorable="d"                      
                      GlowBrush="{DynamicResource AccentColorBrush}"
                      Dialog:DialogParticipation.Register="{Binding}"
                      TitleCaps="False"
                      Title="GoogleTaskDesktop" Height="600" Width="978"
                      WindowStartupLocation="CenterScreen"
                      DataContext="{Binding Main, Source={StaticResource Locator}}">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Button Width="35"
                    Height="35"
                    HorizontalAlignment="Left"
                    BorderThickness="0"
                    Margin="5,0,0,0"
                    Style="{StaticResource SquareButtonStyle}"
                    Command="{Binding ShowCategoriesCommand}">
                <iconPacks:PackIconFontAwesome Kind="BarsSolid"/>
            </Button>

            <TextBlock Text="{Binding Title}"
                       DataContext="{Binding CategoryListViewModel.CurrentCategory}"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       FontSize="13"
                       FontWeight="Bold"
                       Margin="45,0,0,0"/>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="35"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type RadioButton}">
                        <Setter Property="Margin" Value="15,0,0,0"/>
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="FontSize" Value="13"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RadioButton}">
                                    <Border HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            BorderThickness="0"
                                            Background="White">
                                        <ContentPresenter HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Foreground" Value="Orange"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.7"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>                    
                </StackPanel.Resources>
                
                <RadioButton Content="All Task" />
                <RadioButton Content="In Progress"/>
                <RadioButton Content="Completed" />
            </StackPanel>

            <Border BorderThickness="0,2,0,2" 
                    BorderBrush="{DynamicResource GrayBrush10}"/>

            <Border Grid.Row="1" 
                    BorderThickness="1"
                    BorderBrush="Gray"
                    Margin="10" Visibility="Hidden">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="70"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <Ellipse Grid.Column="0"
                             Width="18"
                             Height="18"
                             Fill="{DynamicResource AccentColorBrush}"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="1"
                               Text="Task"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Left"
                               FontWeight="Bold"
                               FontSize="16"/>
                    <iconPacks:PackIconFontAwesome Grid.Column="2"
                                                   Kind="EllipsisHSolid" 
                                                   Foreground="{DynamicResource AccentColorBrush}"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"/>
                </Grid>
            </Border>

            <DataGrid ItemsSource="{Binding Tasks}"
                      DataContext="{Binding CategoryListViewModel.CurrentCategory}"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      HeadersVisibility="None"
                      RowHeight="30"
                      BorderThickness="2"
                      BorderBrush="{DynamicResource GrayBrush10}"
                      Grid.Row="1"
                      Margin="10,40,10,10">
                <DataGrid.Style>
                    <Style BasedOn="{StaticResource MetroDataGrid}" TargetType="{x:Type DataGrid}">
                        <Setter Property="AlternatingRowBackground" Value="{DynamicResource GrayBrush10}" />
                    </Style>
                </DataGrid.Style>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Width="70">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center">
                                    <CheckBox IsChecked="{Binding IsCompleted}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding DataContext.ChangeStatusCommand, 
                                                                            RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                                           CommandParameter="{Binding DataContext,
                                                                            RelativeSource={RelativeSource AncestorType={x:Type DataGridCell}}}"/>
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="Unchecked">
                                                <i:InvokeCommandAction Command="{Binding DataContext.ChangeStatusCommand, 
                                                                            RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                                                           CommandParameter="{Binding DataContext,
                                                                            RelativeSource={RelativeSource AncestorType={x:Type DataGridCell}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </CheckBox>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Width="*" Binding="{Binding Title}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTemplateColumn Width="40">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <iconPacks:PackIconFontAwesome Kind="EllipsisHSolid" 
                                                               Foreground="{DynamicResource AccentColorBrush}"
                                                               HorizontalAlignment="Center"
                                                               VerticalAlignment="Center"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
                <!--<ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="30">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox IsChecked="{Binding IsCompleted}"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                            
                            <TextBlock Text="{Binding Title}"
                                       Grid.Column="1"
                                       VerticalAlignment="Center"/>

                            <iconPacks:PackIconFontAwesome Grid.Column="2"
                                                           Kind="EllipsisHSolid" 
                                                           Foreground="{DynamicResource AccentColorBrush}"
                                                           HorizontalAlignment="Center"
                                                           VerticalAlignment="Center"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>-->
            </DataGrid>

            <Button Command="{Binding ShowNewCategoryCommand}"
                    Grid.Row="2"
                    Margin="15"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom">
                <Button.Style>
                    <Style TargetType="{x:Type ButtonBase}"
                               BasedOn="{StaticResource MahApps.Metro.Styles.MetroCircleButtonStyle}">
                        <Setter Property="Width" Value="40"/>
                        <Setter Property="Height" Value="40"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.7"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>

                <iconPacks:PackIconFontAwesome Kind="PlusSolid" Foreground="White"/>
            </Button>
        </Grid>

        <!--#region CategoryCreationPopup-->
        <simpleChildWindow:ChildWindow Grid.RowSpan="2"
                                       Title="New Category"      
                                       IsModal="False"
                                       DataContext="{Binding CategoryListViewModel.CategoryPopupViewModel}"
                                       IsOpen="{Binding IsShown}">
            <Grid Width="300" 
                  Height="90"
                  Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel VerticalAlignment="Center">
                    <TextBox Text="{Binding Title}"
                             Controls:TextBoxHelper.Watermark="Enter new category name"
                             Controls:TextBoxHelper.ClearTextButton="True"
                             Controls:TextBoxHelper.UseFloatingWatermark="True"
                             BorderThickness="0,0,0,1"
                             VerticalAlignment="Center"/>
                </StackPanel>
                <Grid Grid.Row="1">
                    <Button Style="{StaticResource SquareButtonStyle}"
                            Command="{Binding CancelCommand}"
                            Controls:ControlsHelper.ContentCharacterCasing="Normal"
                            Width="70"
                            Content="CANCEL"
                            HorizontalAlignment="Right"
                            Margin="0,0,80,0"/>
                    <Button Style="{StaticResource AccentedSquareButtonStyle}"
                            Command="{Binding AddCategoryCommand}"
                            Controls:ControlsHelper.ContentCharacterCasing="Normal"
                            Width="70"
                            Content="OK"                             
                            HorizontalAlignment="Right"/>
                </Grid>

            </Grid>
        </simpleChildWindow:ChildWindow>
        <!--#endregion-->
        
        <!--#region CategoryListPopup-->
        <simpleChildWindow:ChildWindow Grid.RowSpan="2"
                                       DataContext="{Binding CategoryListViewModel}"
                                       IsOpen="{Binding IsCategoriesShown}"
                                       IsModal="False"
                                       ShowCloseButton="True">
            <simpleChildWindow:ChildWindow.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
            </simpleChildWindow:ChildWindow.Resources>
            <simpleChildWindow:ChildWindow.TitleTemplate>
                <DataTemplate>
                    <DockPanel Height="30">
                        <TextBlock Text="Categories" 
                                   Margin="4"
                                   TextTrimming="CharacterEllipsis"/>

                        <Button BorderThickness="0"
                                Width="28"
                                Height="28"
                                HorizontalAlignment="Right"
                                Background="{DynamicResource AccentColorBrush}"
                                Padding="0"
                                VerticalAlignment="Center">
                            <Button.Style>
                                <Style TargetType="{x:Type ButtonBase}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="0.7"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <iconPacks:PackIconFontAwesome Kind="PenSolid" 
                                                           Foreground="White"/>
                        </Button>
                    </DockPanel>
                </DataTemplate>
            </simpleChildWindow:ChildWindow.TitleTemplate>
            <Grid Width="300" 
                  Height="415">
                <ListBox ItemsSource="{Binding CategoryViewModels}" 
                         SelectedItem="{Binding CurrentCategory}"
                         DisplayMemberPath="Title"
                         Margin="3">                    
                </ListBox>

                <Button Command="{Binding ShowNewCategoryCommand}"
                        Margin="5"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom">
                    <Button.Style>
                        <Style TargetType="{x:Type ButtonBase}"
                               BasedOn="{StaticResource MahApps.Metro.Styles.MetroCircleButtonStyle}">
                            <Setter Property="Width" Value="40"/>
                            <Setter Property="Height" Value="40"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0.7"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    
                    <iconPacks:PackIconFontAwesome Kind="PlusSolid" Foreground="White"/>
                </Button>
            </Grid>
        </simpleChildWindow:ChildWindow>
        <!--#endregion-->
    </Grid>
</Controls:MetroWindow>
